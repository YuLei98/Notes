字符串的 引力 定义为：字符串中 不同 字符的数量。

例如，"abbca" 的引力为 3 ，因为其中有 3 个不同字符 'a'、'b' 和 'c' 。
给你一个字符串 s ，返回 其所有子字符串的总引力 。

子字符串 定义为：字符串中的一个连续字符序列。

示例 1：
输入：s = "abbca"
输出：28
解释："abbca" 的子字符串有：
- 长度为 1 的子字符串："a"、"b"、"b"、"c"、"a" 的引力分别为 1、1、1、1、1，总和为 5 。
- 长度为 2 的子字符串："ab"、"bb"、"bc"、"ca" 的引力分别为 2、1、2、2 ，总和为 7 。
- 长度为 3 的子字符串："abb"、"bbc"、"bca" 的引力分别为 2、2、3 ，总和为 7 。
- 长度为 4 的子字符串："abbc"、"bbca" 的引力分别为 3、3 ，总和为 6 。
- 长度为 5 的子字符串："abbca" 的引力为 3 ，总和为 3 。
引力总和为 5 + 7 + 7 + 6 + 3 = 28 。

示例 2：
输入：s = "code"
输出：20
解释："code" 的子字符串有：
- 长度为 1 的子字符串："c"、"o"、"d"、"e" 的引力分别为 1、1、1、1 ，总和为 4 。
- 长度为 2 的子字符串："co"、"od"、"de" 的引力分别为 2、2、2 ，总和为 6 。
- 长度为 3 的子字符串："cod"、"ode" 的引力分别为 3、3 ，总和为 6 。
- 长度为 4 的子字符串："code" 的引力为 4 ，总和为 4 。
引力总和为 4 + 6 + 6 + 4 = 20 。

提示：
1 <= s.length <= 105
s 由小写英文字母组成


对于每个子串，如果一个子字符串包含多个相同字符（比如 a），那么不妨规定， 只有最左侧的 a 将对答案做出贡献，这样相同的字符就只被统计了一次。
这样，设字母 a 在字符串出现的情况为 ...a....a....a...，那么：

第 11 个 a 可以做出贡献的子串范围为：[...a....a....a...]
第 22 个 a 可以做出贡献的子串范围为：...a[....a....a...]
第 33 个 a 可以做出贡献的子串范围为：...a....a[....a...]
按照上述方式统计每个字符能做出贡献的子串数量，加起来即是答案。


/*
class Solution {
public:
    long long appealSum(string s) {
        long long ans = 0;
        vector<int> last(26, -1);
        for (int i = 0, n = s.length(); i < n; ++ i) {
            ans += 1LL * (n - i) * (i - last[s[i] - 'a']);
            last[s[i] - 'a'] = i;
        }
        return ans;
    }
};
*/