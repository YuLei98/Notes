有n个人正在操场上排成一列慢跑以进行跑步训练，从最靠前的人编号1,2,...,n
可是队伍里有人觉得跑的太慢了，经常会跑出队伍。而且这个人会带着他后面的xx个人一起跑出，他们会快跑到队伍的最前头并保持他们的相对顺序不变。
请你输出在最后一次跑出结束后，队伍从头到尾的人员编号。

输入描述:

第一行两个以空格分隔的整数。第一个表示队伍人数，第二个表示接下来会有qq次跑出。
接下来会有qq行，表示每一次跑出的信息。每一行的第一个整数表示这一次跑出的人的编号，第二个整数表示这一次他后面和他一起跑的人数有xx个。

输出描述:

一行n个以空格分隔的整数依次代表队伍从头到尾的人员编号。

示例1：

输入
5 2
2 4
3 1

输出
3 4 2 5 1

说明
初始时队伍有5个人，接下来会有2次跑出。队伍初始的时候状态为：
1 2 3 4 5
第一次跑出，编号2带着他后面的4个人（其实没有4个，只有3个）跑到最前面，则队伍变成：
2 3 4 5 1
第二次跑出，编号3带着他后面的1个人（也就是4）跑到最前面，则队伍变成：
3 4 2 5 1

'''cpp超时
struct Node{
    int x;
    Node * next;
    Node() : next(nullptr) {}
    Node(int _x): x(_x), next(nullptr) {}
    Node(int _x, Node *_next): x(_x), next(_next){}
};
int main() {
    quick_read();
    int n, qq;
//     cin >> n >> q;
    scanf("%d%d", &n, &qq);
//     Node *head = new Node;
//     Node *tail = head;
//     FOR(i, 1, n + 1){
//         tail->next = new Node(i);
//         tail = tail->next;
//     }
    Node *head = new Node(n);
    for (int i = n - 1; ~i; --i){
        head = new Node(i, head);
    }
    int a, b;
    while(qq--){
//         cin >> a >> b;
        scanf("%d%d", &a, &b);
        Node *pre = head, *p = head->next;
        while (p->x != a){pre = p;p = p->next;}
        Node *q = p;
        for (int i = 0; i < b && q->next; ++i){
            q = q->next;
        }
        pre->next = q->next;
        q->next = head->next;
        head->next = p;
    }
    Node *p = head->next;
    while (p){
//         cout << p->x << " ";
        printf("%d ", p->x);
        p = p->next;
    }
    return 0;
}
'''
