题目描述
如题，已知一个数列，你需要进行下面两种操作：

将某一个数加上 xx

求出某区间每一个数的和

输入格式
第一行包含两个正整数 n,mn,m，分别表示该数列数字的个数和操作的总个数。

第二行包含 nn 个用空格分隔的整数，其中第 ii 个数字表示数列第 ii 项的初始值。

接下来 mm 行每行包含 33 个整数，表示一个操作，具体如下：

1 x k 含义：将第 xx 个数加上 kk

2 x y 含义：输出区间 [x,y][x,y] 内每个数的和

输出格式
输出包含若干行整数，即为所有操作 22 的结果。

//#include <bits/stdc++.h>
#include<iostream>
#include<vector>
using namespace std;
int n, m;
int lowbit(int x) {
    return x & (-x);
}


//刚开始写的错误的
/*void update(vector<int>& C, int i, int x) {
    for (C[i] += x; i <= n; i += lowbit(i));
}

int get_sum(vector<int>& C, int i) {
    int res = 0;
    for (res += C[i]; i ; i -= lowbit(i));
    return res;
}*/

void update(vector<int>& C, int i, int x) {
    while (i <= n) {
        C[i] += x;
        i += lowbit(i);
    }
}
int get_sum(vector<int>& C, int i) {
    int res = 0;
    //while (i > 0) {
    //    res += C[i];
    //    i -= lowbit(i);
    //}
    for (;i;res+=C[i], i-=lowbit(i));
    return res;
}
int main() {
    cin >> n >> m;
    vector<int> C(n + 1);
    int x;
    for (int i = 1; i <= n; ++i) {
        cin >> x;
        update(C, i, x);
    }
    //for (int c : C) cout << c << " "; cout << endl;
	  //for (int i = 1; i <= n; ++i)
	  //	cout << get_sum(C, i) << " ";
	  //cout << endl;
    int a, b, c;
    for (int i = 0; i < m; ++i) {
        cin >> a >> b >> c;
        if (a == 1) {
            update(C, b, c);
        }
        else {
            //int u = get_sum(C, c), v = get_sum(C, b - 1);
            //cout << u << " " << v << endl;
            cout << get_sum(C, c) - get_sum(C, b - 1) << endl;
        }
    }
}
