题目描述
上体育课的时候，小蛮的老师经常带着同学们一起做游戏。这次，老师带着同学们一起做传球游戏。

游戏规则是这样的：n个同学站成一个圆圈，其中的一个同学手里拿着一个球，当老师吹哨子时开始传球，每个同学可以把球传给自己左右的两个同学中的一个（左右任意），当老师再次吹哨子时，传球停止，此时，拿着
球没有传出去的那个同学就是败者，要给大家表演一个节目。

聪明的小蛮提出一个有趣的问题：有多少种不同的传球方法可以使得从小蛮手里开始传的球，传了m次以后，又回到小蛮手里。两种传球方法被视作不同的方法，当且仅当这两种方法中，接到球的同学按接球顺序组成的序
列是不同的。比如有三个同学1号、2号、3号，并假设小蛮为1号，球传了3次回到小蛮手里的方式有1->2->3->1和1->3->2->1，共2种。

输入格式
一行，有两个用空格隔开的整数3≤n≤30, 1≤m≤30。

输出格式
1个整数，表示符合题意的方法数。

输入输出样例
输入 #1复制
3 3
输出 #1复制
2
说明/提示
40%的数据满足：3 ≤ n ≤ 30, 1 ≤ m ≤ 20
100%的数据满足：3 ≤ n ≤ 30, 1 ≤ m ≤ 30

'''cpp
int main() {
    int n, m;
    cin >> n >> m;
    VVI f(31, VI(31));                                        //f[i][j]表示球经过j步从第0人手上传出并回到第i人手上的方案数
    f[0][0] = 1;
    FOR(j, 1, m + 1) {                                       //注意循环范围，两个for不能交换位置
	FOR(i, 0, n) {
            f[i][j] = f[(i + 1) % n][j - 1] + f[(n + i - 1) % n][j - 1];         //经过j步传回某人手上的方案数为经过j-1步传到他左右两人的方案数之和
        }
    }
    cout << f[0][m];
    return 0;
}
'''
