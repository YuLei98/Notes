/*
根据数论可以把数字分为六大部分，6i、6i + 1、6i + 2、6i + 3、6i + 4、6i + 5，
其中 6i、6i + 2、6i + 3、6i + 4 一定是合数，只有 6i + 1、6i + 5 才有可能是素数，
所以一个数 x 对 6 取余，余数一定是 0、1、2、3、4、5 这六个数字，
只有当余数为 1 或 5 时才有可能是素数，余数为 0、2、3、4 的一定是合数
 */
public boolean isPrimary(long num) {
    // 特殊处理
    if (num == 2 || num == 3 || num == 5) {
        return true;
    }
    // 余数为 0、2、3、4 的是合数
    if (num % 6 != 1 && num % 6 != 5) {
        return false;
    }
    // 这个数字可能是 6i + 1 或 6i + 5，所以这个数字对 6i + 1 或 6i + 5 取余为 0
    // i += 6: 只需要拿到 6i + 1 和 6i + 5 就可以了
    // i * i <= num: 前面的数和后面的数是成对出现的，所以就没必要在考虑后面的了
    for (int i = 5; i * i <= num; i += 6) {
        // i: 6i + 5
        // i + 2: 6i + 1
        if (num % i == 0 || num % (i + 2) == 0) {
            return false;
        }
    }
    return true;
}
